apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: custom-security-scan
  labels:
    {{- include "edp-tekton.labels" . | nindent 4 }}
    app.edp.epam.com/triggertemplate: custom-security-scan
    app.edp.epam.com/pipelinetype: security
spec:
  description: >-
    A dedicated custom security pipeline that combines gitleaks for secrets detection,
    cdxgen for comprehensive dependency scanning and SBOM generation, and semgrep for in-depth static code analysis.
    The pipeline automatically integrates with DefectDojo to provide a unified view of security findings
    and facilitate remediation tracking.
  workspaces:
    - name: shared-workspace
    - name: ssh-creds
  params:
    - name: pipelineUrl
      default: https://portal-{{ .Release.Namespace }}.{{ .Values.dnsWildCard }}/c/main/pipelines/pipelineruns/$(context.pipelineRun.namespace)/$(context.pipelineRun.name)
      type: string
    - name: git-source-revision
      description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
      default: "main"
      type: string
    - name: git-source-url
      description: 'url to checkout'
      default: "https://bitbucket.com/Rolika4/springboot.git"
      type: string
    - name: CODEBASE_NAME
      default: 'gradle'
      description: "Project name"
      type: string

    # -- Example of custom parameters that may be utilized within Tekton tasks.
    - default: "World"
      description: "Example parameter"
      name: username
      type: string
    - default: 'alpine:3.18.9'
      name: image-version
      type: string
  results:
    - description: DefectDojo URL with the generated vulnerability scan reports
      name: SCAN_REPORT_URL
      type: string
      value: $(tasks.security.results.SCAN_REPORT_URL)
  tasks:
    - name: fetch-repository
      taskRef:
        kind: Task
        name: git-clone
      params:
        - name: url
          value: $(params.git-source-url)
        - name: revision
          value: $(params.git-source-revision)
        - name: subdirectory
          value: source
      workspaces:
        - name: output
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds

    - name: init-values
      taskRef:
        kind: Task
        name: init-values
      runAfter:
        - fetch-repository
      params:
        - name: CODEBASE_NAME
          value: $(params.CODEBASE_NAME)
        - name: BRANCH_NAME
          value: $(params.git-source-revision)

    # -- Example of a custom task added to the pipeline.
    # This task demonstrates how to include custom tasks in the pipeline.
    # It can be adapted to meet specific requirements by modifying or adding custom logic.
    - name: hello-world
      taskRef:
        name: hello-world
      runAfter:
        - get-version
      params:
        - name: BASE_IMAGE
          value: "$(params.image-version)"
        - name: username
          value: "$(params.username)"
      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source

    - name: security
      taskRef:
        kind: Task
        name: security
      runAfter:
        - init-values
      params:
        - name: DD_PRODUCT_NAME
          value: $(tasks.init-values.results.TENANT_NAME)
        - name: DD_ENGAGEMENT_NAME
          value: "$(params.CODEBASE_NAME)-$(params.git-source-revision)"
        - name: PROJECT_NAME
          value: $(params.CODEBASE_NAME)
        - name: PROJECT_BRANCH
          value: $(params.git-source-revision)
      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source
