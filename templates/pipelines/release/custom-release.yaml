apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: custom-release
  labels:
    app.edp.epam.com/triggertemplate: custom-release
    app.edp.epam.com/pipelinetype: release
    {{- include "edp-tekton.labels" . | nindent 4 }}
spec:
  description: >-
    A dedicated pipeline for building and releasing a custom application.
    This pipeline handles the entire process from fetching the source code,
    updating the release version, building the application, creating Docker images,
    and pushing the release back to the Git repository.
  workspaces:
    - name: shared-workspace
    - name: ssh-creds
  params:
    - name: git-source-url
      default: "https://github.com/epmd-edp/go-go-beego"
      description: git url to clone
      type: string
    - name: git-source-revision
      description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
      default: "master"
      type: string
    - name: codebase-name
      default: "golang-go"
      description: "Project name"
      type: string
    - name: version
      default: "1.0.0"
      description: "Project version"
      type: string
    - name: build-image
      default: "golang:1.24-bookworm"
      description: "Image for build agent"
      type: string
    - name: chart-path
      default: "deploy-templates"
      description: "Path to chart directory"
      type: string
    - name: dockerhub-account
      description: "Name of dockerhub account to push images"
      type: string
  tasks:
    - name: init-values
      taskRef:
        kind: Task
        name: init-values
      params:
        - name: CODEBASE_NAME
          value: $(params.codebase-name)
        - name: BRANCH_NAME
          value: $(params.git-source-revision)

    - name: fetch-repository
      taskRef:
        kind: Task
        name: git-clone
      runAfter:
        - init-values
      params:
        - name: url
          value: $(params.git-source-url)
        - name: revision
          value: $(params.git-source-revision)
        - name: depth
          value: "0"
      workspaces:
        - name: output
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds

    - name: update-release-version
      taskRef:
        kind: Task
        name: update-release-version
      runAfter:
        - fetch-repository
      params:
        - name: version
          value: $(params.version)
        - name: chart-path
          value: $(params.chart-path)
        - name: codebase-name
          value: $(params.codebase-name)
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: build
      taskRef:
        kind: Task
        name: build-release
      runAfter:
        - update-release-version
      params:
        - name: base-image
          value: $(params.build-image)
        - name: extra-commands
          value: |
            # we checkout the source code in the /source directory
            # and hold cache in the /cache directorycd source
            # clean dist/ directory
            make clean
            # Build amd64 artifact
            VERSION=$(params.version) GOARCH=amd64 make build
            # Build arm64 artifact
            VERSION=$(params.version) GOARCH=arm64 make build
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: buildkit-build
      taskRef:
        kind: Task
        name: buildkit-release
      runAfter:
        - build
      params:
        - name: codebase-name
          value: "$(params.codebase-name)"
        - name: dockerhub-account
          value: "$(params.dockerhub-account)"
        - name: image-tag
          value: "$(params.version)"
        - name: image-tar
          value: "$(params.codebase-name)_$(params.version)"
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: git-release-push
      taskRef:
        kind: Task
        name: git-release-push
      runAfter:
        - buildkit-build
      params:
        - name: branch
          value: $(params.git-source-revision)
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds
